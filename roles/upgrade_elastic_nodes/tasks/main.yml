- name: update all packages (please be patient)
  yum:
    name: '*'
    state: latest

- name: disable shard allocation
  uri:
    url: https://{{ inventory_hostname }}:9200/_cluster/settings
    method: PUT
    user: "{{ elastic_user }}"
    password: "{{ elastic_password }}"
    force_basic_auth: true
    body: '{"persistent":{"cluster.routing.allocation.enable":"primaries"}}' # specify no shard allocation
    body_format: json
    ca_path: /etc/elasticsearch/certs/http_ca.crt

- name: stop non essential indexing to speed up shard recovery - no problem if return error (can be ignored)
  uri:
    url: https://{{ inventory_hostname }}:9200/_flush
    method: POST
    user: "{{ elastic_user }}"
    password: "{{ elastic_password }}"
    force_basic_auth: true
    ca_path: /etc/elasticsearch/certs/http_ca.crt
  ignore_errors: true

- name: stop elasticsearch on node
  systemd:
    name: elasticsearch
    state: stopped

- name: remove yum versionlock
  community.general.yum_versionlock:
    state: absent
    name: elasticsearch

- name: upgrade elasticsearch to latest
  package:
    name: elasticsearch
    state: latest

- name: reboot host
  reboot:
    reboot_timeout: 300

- name: systemctl daemon-reload
  systemd:
    daemon_reload: true

- name: add yum versionlock
  community.general.yum_versionlock:
    state: present
    name: elasticsearch

- name: start elasticsearch on node
  systemd:
    name: elasticsearch
    state: started

- name: make sure Elasticsearch is running before proceeding.
  wait_for:
    host: "{{ inventory_hostname }}"
    port: "9200"
    delay: 3
    timeout: 300

- name: enable shard allocation
  uri:
    url: https://{{ inventory_hostname }}:9200/_cluster/settings
    method: PUT
    user: "{{ elastic_user }}"
    password: "{{ elastic_password }}"
    force_basic_auth: true
    body: '{"persistent":{"cluster.routing.allocation.enable": null}}'
    body_format: json
    ca_path: /etc/elasticsearch/certs/http_ca.crt

- name: wait until cluster status is green {{ inventory_hostname }}
  uri:
    url: https://{{ inventory_hostname }}:9200/_cat/health
    method: GET
    user: "{{ elastic_user }}"
    password: "{{ elastic_password }}"
    force_basic_auth: true
    return_content: true
    ca_path: /etc/elasticsearch/certs/http_ca.crt
  register: response
  until: "'green' in response.content"
  retries: 90 # 90 * 5 seconds
  delay: 5 # Every 5 seconds